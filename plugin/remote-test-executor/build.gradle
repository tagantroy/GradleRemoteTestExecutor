plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.5.10'
    id 'java'
    id 'idea'
    id 'java-gradle-plugin'
}

group "com.tagantroy"
description "Use Remote API to run unit tests"
version "1.0.0"

repositories {
    maven { // The google mirror is less flaky than mavenCentral()
        url "https://maven-central.storage-download.googleapis.com/maven2/" }
    mavenCentral()
}

def grpcVersion = '1.45.0'
def protobufVersion = '3.19.4'
def protocVersion = protobufVersion
//
gradlePlugin {
    plugins {
        register("RemoteTestExecutor") {
            id = "com.tagantroy.remote-test-executor"
            displayName = "Gradle Remote Test Executor"
            description = project.description
            implementationClass = "com.tagantroy.remoteexecutionplugin.RemoteTestExecutionPlugin"
        }
    }
}


//Z
//publishing {
//    publications {
//        register<MavenPublication>("plugin") {
//            artifactId = "test-retry-gradle-plugin"
//            artifact(shadowJar.get()) {
//                classifier = null
//            }
//        }
//    }
//    repositories {
//        maven {
//            name = "GradleBuildInternalSnapshots"
//            url = uri("https://repo.gradle.org/gradle/libs-snapshots-local")
//            credentials {
//                username = project.findProperty("artifactoryUsername") as String?
//                        password = project.findProperty("artifactoryPassword") as String?
//            }
//        }
//    }
//}

dependencies {
    implementation project(":common-types")
    implementation project(":remote-execution-client")
    implementation(gradleApi())
    implementation "org.jetbrains.kotlin:kotlin-stdlib"

    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"

    runtimeOnly "io.grpc:grpc-netty-shaded:${grpcVersion}"
    implementation "com.google.guava:guava:31.0-jre"

    implementation "javax.annotation:javax.annotation-api:1.3.2"

    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
}

test {
    useJUnitPlatform()
}